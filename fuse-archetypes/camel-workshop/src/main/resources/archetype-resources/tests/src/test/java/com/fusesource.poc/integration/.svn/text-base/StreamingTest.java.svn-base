package com.isightpartners.integration;

import org.apache.karaf.testing.AbstractIntegrationTest;
import org.apache.karaf.testing.Helper;
import org.junit.Test;
import org.junit.runner.RunWith;
import org.ops4j.pax.exam.Option;
import org.ops4j.pax.exam.junit.Configuration;
import org.ops4j.pax.exam.junit.JUnit4TestRunner;
import org.osgi.service.blueprint.container.BlueprintContainer;
import org.apache.felix.service.command.CommandProcessor;
import org.apache.felix.service.command.CommandSession;

import static org.apache.karaf.testing.Helper.felixProvisionalApis;
import static org.junit.Assert.assertNotNull;
import static org.ops4j.pax.exam.CoreOptions.equinox;
import static org.ops4j.pax.exam.CoreOptions.felix;
import static org.ops4j.pax.exam.CoreOptions.maven;
import static org.ops4j.pax.exam.CoreOptions.systemProperty;
import static org.ops4j.pax.exam.CoreOptions.waitForFrameworkStartup;
import static org.ops4j.pax.exam.OptionUtils.combine;
import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.scanFeatures;

import static org.ops4j.pax.exam.container.def.PaxRunnerOptions.workingDirectory;

/**
 * Created by IntelliJ IDEA.
 * User: charlesmoulliard
 * Date: 12/01/11
 * Time: 11:23
 * To change this template use File | Settings | File Templates.
 */

@RunWith(JUnit4TestRunner.class)
public class StreamingTest extends AbstractIntegrationTest {

    @Test
    public void testFeatures() throws Exception {
        // Make sure the command services are available
        assertNotNull(getOsgiService(BlueprintContainer.class, "osgi.blueprint.container.symbolicname=org.apache.karaf.shell.obr", 20000));
        assertNotNull(getOsgiService(BlueprintContainer.class, "osgi.blueprint.container.symbolicname=org.apache.karaf.shell.wrapper", 20000));
        // Run some commands to make sure they are installed properly
        CommandProcessor cp = getOsgiService(CommandProcessor.class);
        CommandSession cs = cp.createSession(System.in, System.out, System.err);
        cs.execute("obr:listUrl");
        cs.execute("wrapper:install --help");
        cs.close();
    }

    @Configuration
    public static Option[] configuration() throws Exception{
        return combine(
            // Default karaf environment
            Helper.getDefaultOptions(
                // this is how you set the default log level when using pax logging (logProfile)
                Helper.setLogLevel("INFO")),

            // add two features
            // Helper.loadKarafFeatures("obr", "wrapper", "http", "camel"),

            scanFeatures(
                    maven().groupId("org.apache.karaf").artifactId("apache-karaf").type("xml").classifier("features").version("2.0.0-fuse-02-00"),
                    "obr","wrapper","spring","spring-dm"),

            scanFeatures(
                    maven().groupId("org.apache.camel.karaf").artifactId("apache-camel").type("xml").classifier("features").version("2.4.0-fuse-02-00"),
                    "camel/2.4.0-fuse-02-00", "camel-jms","camel-jetty"),

            workingDirectory("target/paxrunner/features/"),

            waitForFrameworkStartup(),

            // Test on both equinox and felix
            // TODO: pax-exam does not support the latest felix version :-(
            // TODO: so we use the higher supported which should be the same
            // TODO: as the one specified in itests/dependencies/pom.xml
            felix().version("3.0.2"),

            felixProvisionalApis()
        );
    }

}
