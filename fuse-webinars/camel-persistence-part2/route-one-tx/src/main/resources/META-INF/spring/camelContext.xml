<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2011 FuseSource
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/osgi
           http://www.springframework.org/schema/osgi/spring-osgi.xsd
           http://camel.apache.org/schema/spring
           http://camel.apache.org/schema/spring/camel-spring.xsd
    ">

    <!-- Tx Manager
    <osgi:reference id="txManager" interface="org.springframework.transaction.PlatformTransactionManager"/>
    -->

    <osgi:reference id="txManager" filter="(tx=JTA-Spring)" interface="org.springframework.transaction.PlatformTransactionManager"/>

    <!-- Transaction POLICY used by Camel Transactional Route
         We refer to the ServiceMiX TxManager -->
    <bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
       <property name="transactionManager" ref="txManager"/>
    </bean>

    <!-- ActiveMQ JMS Configuration
         Is defined as Transacted and use ServiceMix TxManager -->
    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory">
            <osgi:reference interface="javax.jms.ConnectionFactory"/>
        </property>
        <property name="transactionManager" ref="txManager"/>
        <property name="transacted" value="true"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="connectionFactory">
           <osgi:reference interface="javax.jms.ConnectionFactory"/>
        </property>
        <property name="transacted" value="true"/>
        <property name="transactionManager" ref="txManager"/>
        <property name="cacheLevel" value="0"/>
    </bean>

    <bean id="processIncident" class="com.fusesource.webinars.persistence.camel.ProcessIncidents">
       <property name="incidentDao">
          <osgi:reference interface="com.fusesource.webinars.persistence.dao.IncidentDAO"/>
      </property>
    </bean>

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

        <dataFormats>
            <bindy type="Csv" packages="com.fusesource.webinars.persistence.model" id="csvReport"/>
        </dataFormats>

        <route id="file-to-queue">
        <from uri="file:datainsert?moveFailed=failed"/>
            <unmarshal ref="csvReport"/>
            <split>
                <simple>${body}</simple>
                <bean ref="processIncident" method="extract"/>
                <to uri="activemq:queue:incident"/>
                <log message=">>> Incident created in queue : ${body}"/>
            </split>
        </route>

        <route id="queue-create-incident">
            <from uri="activemq:queue:incident"/>
            <transacted ref="PROPAGATION_REQUIRED"/>
            <log message=">>> Incident received : ${body}"/>
            <bean ref="processIncident" method="saveReport"/>
            <!-- <bean ref="processIncident" method="generateError"/> -->
            <log message=">>> Record inserted : ${body}"/>
        </route>


        <!--
        <route>
          <from uri="timer://test?period=60000"/>
          <filter>
            <groovy>true</groovy>
            <log message=">>>>> Groovy Test"/>
          </filter>
        </route>
        -->

    </camelContext>

</beans>
