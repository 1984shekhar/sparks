<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2011 FuseSource
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
-->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:osgi="http://www.springframework.org/schema/osgi"
       xsi:schemaLocation="
           http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/osgi
           http://www.springframework.org/schema/osgi/spring-osgi.xsd
	       http://camel.apache.org/schema/spring
           http://camel.apache.org/schema/spring/camel-spring.xsd">


    <!-- Tx Manager -->
    <osgi:reference id="txManager" filter="(tx=JPA)" interface="org.springframework.transaction.PlatformTransactionManager"/>

    <!-- Transaction POLICY used by Camel Transactional Route
         We refer to the Spring JPA TxManager -->
    <bean id="PROPAGATION_REQUIRED" class="org.apache.camel.spring.spi.SpringTransactionPolicy">
       <property name="transactionManager" ref="txManager"/>
    </bean>

    <!-- ActiveMQ JMS Configuration is defined as Transacted and use ServiceMix TxManager -->
    <bean id="jmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
        <property name="connectionFactory" ref="activemqConnectionFactory"/>
        <property name="transactionManager">
            <osgi:reference interface="org.springframework.transaction.PlatformTransactionManager"/>
        </property>
        <property name="transacted" value="true"/>
        <property name="cacheLevelName" value="CACHE_AUTO"/>
    </bean>

    <bean id="activemq" class="org.apache.activemq.camel.component.ActiveMQComponent">
        <property name="configuration" ref="jmsConfig"/>
    </bean>

	<bean id="transactionTemplate" class="org.springframework.transaction.support.TransactionTemplate">
		<property name="transactionManager">
			<bean class="org.springframework.orm.jpa.JpaTransactionManager">
				<property name="entityManagerFactory" ref="emFactory"/>
			</bean>
		</property>
	</bean>

	<bean id="jpaTemplate" class="org.springframework.orm.jpa.JpaTemplate">
		<property name="entityManagerFactory" ref="emFactory" />
	</bean>


    <bean id="emFactory" class="org.springframework.orm.jpa.LocalEntityManagerFactoryBean">
        <property name="persistenceUnitName" value="idempotentDb"/>
    </bean>

    <bean id="manageIncidents" class="com.fusesource.webinars.persistence.camel.ManageIncidents">
       <property name="incidentDao">
          <osgi:reference interface="com.fusesource.webinars.persistence.dao.IncidentDAO"/>
        </property>
    </bean>

    <bean id="myRepo" class="org.apache.camel.processor.idempotent.jpa.JpaMessageIdRepository">
        <constructor-arg index="0" ref="jpaTemplate"/>
        <!-- This 2nd parameter is the name  (= a cateogry name).
             You can have different repositories with different names -->
        <constructor-arg index="1" value="FileConsumer"/>
    </bean>

    <camelContext id="camel" xmlns="http://camel.apache.org/schema/spring">

         <dataFormats>
             <bindy type="Csv" packages="com.fusesource.webinars.persistence.model" id="csvReport"/>
         </dataFormats>

         <route id="file-to-queue">
             <from uri="file:datainsert?moveFailed=failed"/>
             <unmarshal ref="csvReport"/>
             <split>
                 <simple>${body}</simple>
                 <setHeader headerName="messageId">
                     <simple>${header.CamelFileName}</simple>
                 </setHeader>
                 <bean ref="manageIncidents" method="getIncident"/>
                 <to uri="activemq:queue:incident"/>
                 <log message=">>> Incident created in queue : ${body}"/>
             </split>
         </route>

         <route id="queue-idempotent">
             <from uri="activemq:queue:incident"/>
             <transacted ref="PROPAGATION_REQUIRED"/>

             <idempotentConsumer eager="true" messageIdRepositoryRef="myRepo">
                 <header>messageId</header>
                 <bean ref="manageIncidents" method="saveReport"/>
                 <log message=">>> Record inserted : ${body}"/>
             </idempotentConsumer>
         </route>

     </camelContext>



</beans>
